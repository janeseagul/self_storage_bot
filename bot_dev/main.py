import asyncio
import os

from aiogram import Bot, Dispatcher, executor, types
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram.types import ContentTypes
from dotenv import load_dotenv
from keyboard import *

load_dotenv()
tg_token = os.getenv('TG_BOT_TOKEN')
bot = Bot(token=tg_token)
storage = MemoryStorage()
dp = Dispatcher(bot, storage=storage)


class D(StatesGroup):
    contact = State()
    make_order = State()


async def on_startup(_):
    pass


@dp.callback_query_handler(text='storage_list')
async def send_good_list(call: types.CallbackQuery):
    good_list = """–ß—Ç–æ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–µ:                                                                                                                              
‚úÖ –ú–µ–±–µ–ª—å                             
‚úÖ –ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞                 
‚úÖ –û–¥–µ–∂–¥–∞ –∏ –æ–±—É–≤—å                      
‚úÖ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
‚úÖ –ü–æ—Å—É–¥–∞
‚úÖ –ö–Ω–∏–≥–∏
‚úÖ –®–∏–Ω—ã
‚úÖ –í–µ–ª–æ—Å–∏–ø–µ–¥—ã
‚úÖ –ú–æ—Ç–æ—Ü–∏–∫–ª—ã –∏ —Å–∫—É—Ç–µ—Ä—ã
‚úÖ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
–ß—Ç–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ —Ö—Ä–∞–Ω–µ–Ω–∏–µ:
‚ùå –ê–ª–∫–æ–≥–æ–ª—å
‚ùå –ü—Ä–æ–¥—É–∫—Ç—ã
‚ùå –î–µ–Ω—å–≥–∏ –∏ –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω–æ—Å—Ç–∏
‚ùå –ò–∑–¥–µ–ª–∏—è –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–≥–æ –º–µ—Ö–∞
‚ùå –ñ–∏–≤—ã–µ —Ü–≤–µ—Ç—ã –∏ —Ä–∞—Å—Ç–µ–Ω–∏—è
‚ùå –î–æ–º–∞—à–Ω–∏–µ –ø–∏—Ç–æ–º—Ü—ã
‚ùå –û—Ä—É–∂–∏–µ –∏ –±–æ–µ–ø—Ä–∏–ø–∞—Å—ã
‚ùå –í–∑—Ä—ã–≤–æ–æ–ø–∞—Å–Ω—ã–µ –≤–µ—â–µ—Å—Ç–≤–∞ –∏ —Ç–æ–∫—Å–∏–Ω—ã
‚ùå –õ–∞–∫–∏ –∏ –∫—Ä–∞—Å–∫–∏ –≤ –Ω–µ–≥–µ—Ä–º–µ—Ç–∏—á–Ω–æ–π —Ç–∞—Ä–µ
‚ùå –õ—é–±–æ–π –º—É—Å–æ—Ä –∏ –æ—Ç—Ö–æ–¥—ã
    """
    await call.message.answer(good_list, reply_markup=kb6())


@dp.callback_query_handler(text='support')
async def to_support(call: types.CallbackQuery):
    await call.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:', reply_markup=kb2())


@dp.callback_query_handler(text='faq')
async def send_faq(call: types.CallbackQuery):
    faq = """
1. –û—Ñ–æ—Ä–º–∏—Ç–µ –∑–∞—è–≤–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è –±–æ—Ç–∞.
2. –ú—ã —Ä–∞—Å—Å—á–∏—Ç–∞–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π —Ç–∞—Ä–∏—Ñ, –∏—Å—Ö–æ–¥—è –∏–∑ –æ–±—ä–µ–º–∞ –≤–µ—â–µ–π.
3. –í —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –∫ –≤–∞–º –ø—Ä–∏–µ–¥–µ—Ç –∫–æ–º–∞–Ω–¥–∞ –º—É–≤–µ—Ä–æ–≤, —É–ø–∞–∫—É–µ—Ç –≤–µ—â–∏, –≤—ã–Ω–µ—Å–µ—Ç –∏ –æ—Ç–≤–µ–∑—ë—Ç –∏—Ö –Ω–∞ —Å–∫–ª–∞–¥ –∏–ª–∏ –Ω–∞ –≤–∞—à–µ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞.
4. –ö–æ–≥–¥–∞ –∫–∞–∫–∞—è-—Ç–æ –≤–µ—â—å —Å–Ω–æ–≤–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è, –∑–∞–∫–∞–∂–∏—Ç–µ –≤–æ–∑–≤—Ä–∞—Ç, –∏ –º—ã –ø—Ä–∏–≤–µ–∑–µ–º –µ—ë –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –ú–æ—Å–∫–≤—ã.
5. –ù–∞—à–∞ —Å–∏—Å—Ç–µ–º–∞ –Ω–µ –ø—Ä–µ–¥—É—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π –∑–∞ –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, \
—á—Ç–æ –≤—ã –ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–æ—Ç –æ–±—ä–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä—ã–π —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∑–∞–Ω–∏–º–∞—é—Ç –≤–∞—à–∏ –≤–µ—â–∏, –∞ –Ω–µ –∑–∞ –≤–µ—Å—å –æ–±—ä–µ–º –∫–æ–º–Ω–∞—Ç—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è.
6. –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º —É—Å–ª—É–≥—É –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É –Ω–∞—à–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö —É–ø–∞–∫–æ–≤–æ—á–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤. \
–ù–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ –º—É–≤–µ—Ä–æ–≤ —Å–æ–±–µ—Ä–µ—Ç, —É–ø–∞–∫—É–µ—Ç –∏ –º–∞—Ä–∫–∏—Ä—É–µ—Ç –≤—Å–µ –≤–∞—à–∏ –≤–µ—â–∏, –∞ –∑–∞—Ç–µ–º —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Ö –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥. \
–í—Å–µ –≤–µ—â–∏ —Ö—Ä–∞–Ω—è—Ç—Å—è –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–∞–ª–ª–µ—Ç–∞—Ö –≤ –Ω–∞–¥–µ–∂–Ω—ã—Ö —É—Å–ª–æ–≤–∏—è—Ö. \
–ù–∞—à —Å–∫–ª–∞–¥ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ—Ç—Å—è –≤–∏–¥–µ–æ–∫–∞–º–µ—Ä–∞–º–∏ –±–µ–∑ —Å–ª–µ–ø—ã—Ö –∑–æ–Ω, –∏ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ –æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.
7. –í—ã –º–æ–∂–µ—Ç–µ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –≤–µ—â–∏ —á–µ—Ä–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞. \
–¢–∞–º –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –≤–µ—â–µ–π –≤ –ª—é–±–æ–µ —É–¥–æ–±–Ω–æ–µ –¥–ª—è –≤–∞—Å –≤—Ä–µ–º—è –∏–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–µ –≤–µ—â–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è. \
–í—Å–µ –≤–∞—à–∏ –≤–µ—â–∏ –≤—Å–µ–≥–¥–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.
    """
    await call.message.answer(faq, reply_markup=kb5())


@dp.callback_query_handler(text='back_to_menu')
async def back_to_menu(call: types.CallbackQuery):
    await call.message.answer(text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –æ–±—Ä–∞—Ç–Ω–æ –≤ –º–µ–Ω—é', reply_markup=kb1())


@dp.callback_query_handler(text='application')
async def leave_a_request(call: types.CallbackQuery):
    await call.message.answer('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö', reply_markup=data_processing())


@dp.callback_query_handler(text=['runner', 'myself'])
async def delivery(call: types.CallbackQuery):
    if call.data == 'runner':
        await call.message.answer("""–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—É—Ä—å–µ—Ä—Å–∫—É—é –¥–æ—Å—Ç–∞–≤–∫—É! 
–ù–∞—à–∏ –º—É–≤–µ—Ä—ã –ø—Ä–∏–µ–¥—É—Ç –∫ –≤–∞–º –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É, –∏–∑–º–µ—Ä—è—Ç (–µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ) –∏ —É–ø–∞–∫—É—é—Ç –≤–∞—à–∏ –≤–µ—â–∏.""",
                                  reply_markup=choose_weight())
    elif call.data == 'myself':
        await call.message.answer('–ñ–¥–µ–º –≤–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É: –Æ–±–∏–ª–µ–π–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 17–∫1', reply_markup=choose_weight())


@dp.callback_query_handler(text=['ten', 'ten_twenty', '40_70', '70-100', 'more100', 'idk'])
async def choose_w(call: types.CallbackQuery):
    if call.data == 'idk':
        await call.message.answer("""–ö–æ–Ω–µ—á–Ω–æ! –ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤–µ—Å –∏ –≤—ã—Å–æ—Ç—É –≤–∞—à–∏—Ö –≤–µ—â–µ–π. 
–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≤–µ–∑—Ç–∏ –≤–µ—â–∏ —Å–∞–º–∏ –∏–ª–∏ –º—ã –ø—Ä–∏—à–ª–µ–º –∫ –≤–∞–º –∫–æ–º–∞–Ω–¥—É –º—É–≤–µ—Ä–æ–≤, —á—Ç–æ–±—ã —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Ä–æ—Å—Ç –∏ –≤–µ—Å –Ω–∞ –º–µ—Å—Ç–µ.""",
                                  reply_markup=choose_del2())
    else:
        await call.message.answer('–¢–µ–ø–µ—Ä—å —É–∫–∞–∂–∏—Ç–µ –≤—ã—Å–æ—Ç—É –≤–∞—à–∏—Ö –≤–µ—â–µ–π:', reply_markup=choose_height())


@dp.callback_query_handler(text='idkmyself')
async def del_by_myself(call: types.CallbackQuery):
    await call.message.answer('–ñ–¥–µ–º –≤–∞—Å –ø–æ –∞–¥—Ä–µ—Å—É: –Æ–±–∏–ª–µ–π–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç, 17–∫1', reply_markup=kb2())


@dp.callback_query_handler(text='idkrunners')
async def callrunners(call: types.CallbackQuery):
    await call.message.answer(
        '–ú—É–≤–µ—Ä—ã –ø—Ä–∏–µ–¥—É—Ç –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∞–¥—Ä–µ—Å—É, —á—Ç–æ–±—ã –∏–∑–º–µ—Ä–∏—Ç—å, —É–ø–∞–∫–æ–≤–∞—Ç—å –∏ –∑–∞–±—Ä–∞—Ç—å –≤–∞—à–∏ –≤–µ—â–∏ –Ω–∞ —Å–∫–ª–∞–¥')
    await asyncio.sleep(1)
    await call.message.answer('–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá:', reply_markup=kb1())


@dp.callback_query_handler(text='letter_to_sup')
async def send_letter_to_sup(call: types.CallbackQuery):
    await call.message.answer("""–î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É:
storagebot@gmail.com
+79215897941""")
    await asyncio.sleep(1)
    await call.message.answer('–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá:', reply_markup=kb6())


@dp.callback_query_handler(text=['yes', 'no'])
async def person_data_processing(call: types.CallbackQuery):
    if call.data == 'yes':
        await D.contact.set()
        await call.message.answer('–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ', reply_markup=contact())
        await asyncio.sleep(1)
        await call.message.answer('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: —É–ª. –Æ–∂–Ω–∞—è, –¥. 13, –∫–≤. 7')
    if call.data == 'no':
        await call.message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:', reply_markup=kb2())


@dp.message_handler(state=D.contact)
async def make_application(msg: types.Message, state: FSMContext, content_types=ContentTypes.CONTACT):
    await msg.answer('–í–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã.\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –æ–ø—Ü–∏—é –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá:',
                     reply_markup=choose_del())
    await state.finish()


@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    text = """–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! 
–ú—ã –∫–æ–º–ø–∞–Ω–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è –º–∞–ª–æ–≥–∞–±–∞—Ä–∏—Ç–Ω—ã–µ —è—á–µ–π–∫–∏ –¥–ª—è —Å–µ–∑–æ–Ω–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–µ—â–µ–π.
–ù–∞–ø—Ä–∏–º–µ—Ä –≤–µ–ª–æ—Å–∏–ø–µ–¥—ã, –∫–∞—è–∫–∏, c–Ω–µ–≥–æ—Ö–æ–¥—ã. 
–ú—ã –∑–∞–±–µ—Ä—ë–º –≤–∞—à–∏ –≤–µ—â–∏ –Ω–∞ –Ω–∞—à —Å–∫–ª–∞–¥, —Å–æ—Ö—Ä–∞–Ω–∏–º –∏ –ø—Ä–∏–≤–µ–∑—ë–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –ª—é–±—É—é —Ç–æ—á–∫—É –ú–æ—Å–∫–≤—ã.
–î–ª—è –≤—ã–±–æ—Ä–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å —Ä–∞–∑–¥–µ–ª–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–Ω–æ–ø–∫–∞–º–∏ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá
        """
    await msg.answer(text, reply_markup=kb1())


if __name__ == '__main__':
    executor.start_polling(dp,
                           skip_updates=True,
                           on_startup=on_startup)
